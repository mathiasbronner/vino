/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MapImport } from './routes/map'
import { Route as ExploreImport } from './routes/explore'
import { Route as IndexImport } from './routes/index'
import { Route as RegionIndexImport } from './routes/$region.index'
import { Route as RegionWinesIndexImport } from './routes/$region.wines.index'
import { Route as RegionTerroirIndexImport } from './routes/$region.terroir.index'
import { Route as RegionHistoryIndexImport } from './routes/$region.history.index'
import { Route as RegionGrapesIndexImport } from './routes/$region.grapes.index'

// Create/Update Routes

const MapRoute = MapImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRoute = ExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegionIndexRoute = RegionIndexImport.update({
  id: '/$region/',
  path: '/$region/',
  getParentRoute: () => rootRoute,
} as any)

const RegionWinesIndexRoute = RegionWinesIndexImport.update({
  id: '/$region/wines/',
  path: '/$region/wines/',
  getParentRoute: () => rootRoute,
} as any)

const RegionTerroirIndexRoute = RegionTerroirIndexImport.update({
  id: '/$region/terroir/',
  path: '/$region/terroir/',
  getParentRoute: () => rootRoute,
} as any)

const RegionHistoryIndexRoute = RegionHistoryIndexImport.update({
  id: '/$region/history/',
  path: '/$region/history/',
  getParentRoute: () => rootRoute,
} as any)

const RegionGrapesIndexRoute = RegionGrapesIndexImport.update({
  id: '/$region/grapes/',
  path: '/$region/grapes/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreImport
      parentRoute: typeof rootRoute
    }
    '/map': {
      id: '/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof MapImport
      parentRoute: typeof rootRoute
    }
    '/$region/': {
      id: '/$region/'
      path: '/$region'
      fullPath: '/$region'
      preLoaderRoute: typeof RegionIndexImport
      parentRoute: typeof rootRoute
    }
    '/$region/grapes/': {
      id: '/$region/grapes/'
      path: '/$region/grapes'
      fullPath: '/$region/grapes'
      preLoaderRoute: typeof RegionGrapesIndexImport
      parentRoute: typeof rootRoute
    }
    '/$region/history/': {
      id: '/$region/history/'
      path: '/$region/history'
      fullPath: '/$region/history'
      preLoaderRoute: typeof RegionHistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/$region/terroir/': {
      id: '/$region/terroir/'
      path: '/$region/terroir'
      fullPath: '/$region/terroir'
      preLoaderRoute: typeof RegionTerroirIndexImport
      parentRoute: typeof rootRoute
    }
    '/$region/wines/': {
      id: '/$region/wines/'
      path: '/$region/wines'
      fullPath: '/$region/wines'
      preLoaderRoute: typeof RegionWinesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/map': typeof MapRoute
  '/$region': typeof RegionIndexRoute
  '/$region/grapes': typeof RegionGrapesIndexRoute
  '/$region/history': typeof RegionHistoryIndexRoute
  '/$region/terroir': typeof RegionTerroirIndexRoute
  '/$region/wines': typeof RegionWinesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/map': typeof MapRoute
  '/$region': typeof RegionIndexRoute
  '/$region/grapes': typeof RegionGrapesIndexRoute
  '/$region/history': typeof RegionHistoryIndexRoute
  '/$region/terroir': typeof RegionTerroirIndexRoute
  '/$region/wines': typeof RegionWinesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/explore': typeof ExploreRoute
  '/map': typeof MapRoute
  '/$region/': typeof RegionIndexRoute
  '/$region/grapes/': typeof RegionGrapesIndexRoute
  '/$region/history/': typeof RegionHistoryIndexRoute
  '/$region/terroir/': typeof RegionTerroirIndexRoute
  '/$region/wines/': typeof RegionWinesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/explore'
    | '/map'
    | '/$region'
    | '/$region/grapes'
    | '/$region/history'
    | '/$region/terroir'
    | '/$region/wines'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/explore'
    | '/map'
    | '/$region'
    | '/$region/grapes'
    | '/$region/history'
    | '/$region/terroir'
    | '/$region/wines'
  id:
    | '__root__'
    | '/'
    | '/explore'
    | '/map'
    | '/$region/'
    | '/$region/grapes/'
    | '/$region/history/'
    | '/$region/terroir/'
    | '/$region/wines/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExploreRoute: typeof ExploreRoute
  MapRoute: typeof MapRoute
  RegionIndexRoute: typeof RegionIndexRoute
  RegionGrapesIndexRoute: typeof RegionGrapesIndexRoute
  RegionHistoryIndexRoute: typeof RegionHistoryIndexRoute
  RegionTerroirIndexRoute: typeof RegionTerroirIndexRoute
  RegionWinesIndexRoute: typeof RegionWinesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExploreRoute: ExploreRoute,
  MapRoute: MapRoute,
  RegionIndexRoute: RegionIndexRoute,
  RegionGrapesIndexRoute: RegionGrapesIndexRoute,
  RegionHistoryIndexRoute: RegionHistoryIndexRoute,
  RegionTerroirIndexRoute: RegionTerroirIndexRoute,
  RegionWinesIndexRoute: RegionWinesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/explore",
        "/map",
        "/$region/",
        "/$region/grapes/",
        "/$region/history/",
        "/$region/terroir/",
        "/$region/wines/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/explore": {
      "filePath": "explore.tsx"
    },
    "/map": {
      "filePath": "map.tsx"
    },
    "/$region/": {
      "filePath": "$region.index.tsx"
    },
    "/$region/grapes/": {
      "filePath": "$region.grapes.index.tsx"
    },
    "/$region/history/": {
      "filePath": "$region.history.index.tsx"
    },
    "/$region/terroir/": {
      "filePath": "$region.terroir.index.tsx"
    },
    "/$region/wines/": {
      "filePath": "$region.wines.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
